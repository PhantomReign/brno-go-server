
package cz.vutbr.fit.live.kordis;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "KORDISService", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://kordis.idsjmk.cz:8000/Traffic/?wsdl")
public class KORDISService
    extends Service
{

    private final static URL KORDISSERVICE_WSDL_LOCATION;
    private final static WebServiceException KORDISSERVICE_EXCEPTION;
    private final static QName KORDISSERVICE_QNAME = new QName("http://tempuri.org/", "KORDISService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://kordis.idsjmk.cz:8000/Traffic/?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        KORDISSERVICE_WSDL_LOCATION = url;
        KORDISSERVICE_EXCEPTION = e;
    }

    public KORDISService() {
        super(__getWsdlLocation(), KORDISSERVICE_QNAME);
    }

    public KORDISService(WebServiceFeature... features) {
        super(__getWsdlLocation(), KORDISSERVICE_QNAME, features);
    }

    public KORDISService(URL wsdlLocation) {
        super(wsdlLocation, KORDISSERVICE_QNAME);
    }

    public KORDISService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, KORDISSERVICE_QNAME, features);
    }

    public KORDISService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public KORDISService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns INearDeparturesService
     */
    @WebEndpoint(name = "BasicHttpBinding_INearDeparturesService")
    public INearDeparturesService getBasicHttpBindingINearDeparturesService() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_INearDeparturesService"), INearDeparturesService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns INearDeparturesService
     */
    @WebEndpoint(name = "BasicHttpBinding_INearDeparturesService")
    public INearDeparturesService getBasicHttpBindingINearDeparturesService(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_INearDeparturesService"), INearDeparturesService.class, features);
    }

    /**
     * 
     * @return
     *     returns IRouteOnCall
     */
    @WebEndpoint(name = "BasicHttpBinding_IRouteOnCall")
    public IRouteOnCall getBasicHttpBindingIRouteOnCall() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IRouteOnCall"), IRouteOnCall.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IRouteOnCall
     */
    @WebEndpoint(name = "BasicHttpBinding_IRouteOnCall")
    public IRouteOnCall getBasicHttpBindingIRouteOnCall(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IRouteOnCall"), IRouteOnCall.class, features);
    }

    /**
     * 
     * @return
     *     returns ILineRouteDelay
     */
    @WebEndpoint(name = "BasicHttpBinding_ILineRouteDelay")
    public ILineRouteDelay getBasicHttpBindingILineRouteDelay() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ILineRouteDelay"), ILineRouteDelay.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ILineRouteDelay
     */
    @WebEndpoint(name = "BasicHttpBinding_ILineRouteDelay")
    public ILineRouteDelay getBasicHttpBindingILineRouteDelay(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ILineRouteDelay"), ILineRouteDelay.class, features);
    }

    /**
     * 
     * @return
     *     returns ITrafficState
     */
    @WebEndpoint(name = "BasicHttpBinding_ITrafficState")
    public ITrafficState getBasicHttpBindingITrafficState() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ITrafficState"), ITrafficState.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ITrafficState
     */
    @WebEndpoint(name = "BasicHttpBinding_ITrafficState")
    public ITrafficState getBasicHttpBindingITrafficState(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ITrafficState"), ITrafficState.class, features);
    }

    /**
     * 
     * @return
     *     returns IActualTrafficPerformance
     */
    @WebEndpoint(name = "BasicHttpBinding_IActualTrafficPerformance")
    public IActualTrafficPerformance getBasicHttpBindingIActualTrafficPerformance() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IActualTrafficPerformance"), IActualTrafficPerformance.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IActualTrafficPerformance
     */
    @WebEndpoint(name = "BasicHttpBinding_IActualTrafficPerformance")
    public IActualTrafficPerformance getBasicHttpBindingIActualTrafficPerformance(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IActualTrafficPerformance"), IActualTrafficPerformance.class, features);
    }

    /**
     * 
     * @return
     *     returns INewRSDInfo
     */
    @WebEndpoint(name = "BasicHttpBinding_INewRSDInfo")
    public INewRSDInfo getBasicHttpBindingINewRSDInfo() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_INewRSDInfo"), INewRSDInfo.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns INewRSDInfo
     */
    @WebEndpoint(name = "BasicHttpBinding_INewRSDInfo")
    public INewRSDInfo getBasicHttpBindingINewRSDInfo(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_INewRSDInfo"), INewRSDInfo.class, features);
    }

    /**
     * 
     * @return
     *     returns IStopInfo
     */
    @WebEndpoint(name = "BasicHttpBinding_IStopInfo")
    public IStopInfo getBasicHttpBindingIStopInfo() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IStopInfo"), IStopInfo.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IStopInfo
     */
    @WebEndpoint(name = "BasicHttpBinding_IStopInfo")
    public IStopInfo getBasicHttpBindingIStopInfo(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IStopInfo"), IStopInfo.class, features);
    }

    /**
     * 
     * @return
     *     returns IElpInfo
     */
    @WebEndpoint(name = "BasicHttpBinding_IElpInfo")
    public IElpInfo getBasicHttpBindingIElpInfo() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IElpInfo"), IElpInfo.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IElpInfo
     */
    @WebEndpoint(name = "BasicHttpBinding_IElpInfo")
    public IElpInfo getBasicHttpBindingIElpInfo(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IElpInfo"), IElpInfo.class, features);
    }

    /**
     * 
     * @return
     *     returns ITweetsOnLines
     */
    @WebEndpoint(name = "BasicHttpBinding_ITweetsOnLines")
    public ITweetsOnLines getBasicHttpBindingITweetsOnLines() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ITweetsOnLines"), ITweetsOnLines.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ITweetsOnLines
     */
    @WebEndpoint(name = "BasicHttpBinding_ITweetsOnLines")
    public ITweetsOnLines getBasicHttpBindingITweetsOnLines(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_ITweetsOnLines"), ITweetsOnLines.class, features);
    }

    private static URL __getWsdlLocation() {
        if (KORDISSERVICE_EXCEPTION!= null) {
            throw KORDISSERVICE_EXCEPTION;
        }
        return KORDISSERVICE_WSDL_LOCATION;
    }

}
